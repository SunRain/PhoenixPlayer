TEMPLATE = aux

TRANSLATIONS += \
        phoenixplayer.ts \
        phoenixplayer-zh_CN.ts \
        $${NULL}

TS_FILE = $$PWD/phoenixplayer.ts
HAVE_TRANSLATIONS = 0

# Translation source directories
TRANSLATION_SOURCE_CANDIDATES = $${PWD}/../src/app $${PWD}/../qml
for(dir, TRANSLATION_SOURCE_CANDIDATES) {
    exists($$dir) {
        TRANSLATION_SOURCES += \"$$dir\"
    }
}

# prefix all TRANSLATIONS with the src dir
# the qm files are generated from the ts files copied to out dir
for(t, TRANSLATIONS) {
    TRANSLATIONS_IN  += \"$${_PRO_FILE_PWD_}/$$t\"
    TRANSLATIONS_OUT += \"$${OUT_PWD}/$$t\"
    HAVE_TRANSLATIONS = 1

message ($${TRANSLATIONS_IN})
message ($${TRANSLATIONS_OUT})
}


qm.files = $$replace(TRANSLATIONS_OUT, \.ts, .qm)
qm.path = /usr/share/phoenixplayer/translations
qm.CONFIG += no_check_exist

#message ($${TRANSLATION_SOURCES})
#message ($${TS_FILE})
#message ($$TRANSLATIONS_IN)


# update the ts files in the src dir and then copy them to the out dir
qm.commands += lupdate -noobsolete $${TRANSLATION_SOURCES} -ts $${TS_FILE} $$TRANSLATIONS_IN && \
    mkdir -p translations && \
    [ \"$${OUT_PWD}\" != \"$${_PRO_FILE_PWD_}\" -a $$HAVE_TRANSLATIONS -eq 1 ] && \
    cp -af $${TRANSLATIONS_IN} \"$${OUT_PWD}\" || :

TRANSLATE_UNFINISHED = -nounfinished


# create the qm files
#sailfishapp_i18n_idbased {
#    qm.commands += ; [ $$HAVE_TRANSLATIONS -eq 1 ] && lrelease -idbased $${TRANSLATE_UNFINISHED} $${TRANSLATIONS_OUT} || :
#} else {
    qm.commands += ; [ $$HAVE_TRANSLATIONS -eq 1 ] && lrelease $${TRANSLATE_UNFINISHED} $${TRANSLATIONS_OUT} # || :
#}

message ($${qm.commands})



INSTALLS += qm

export(INSTALLS)
